version: "3"

services:
  postgres-filme-service:
    build:
      context: filme-service
      dockerfile: Dockerfile-postgresql
    restart: always
    volumes:
      - postgresql-filme-service-volume:/var/lib/postgresql/data
    networks:
      - postgresql-filme-service-network

  postgres-usuario-service:
    build:
      context: usuario-service
      dockerfile: Dockerfile-postgresql
    restart: always
    volumes:
      - postgresql-usuario-service-volume:/var/lib/postgresql/data
    networks:
      - postgresql-usuario-service-network

  postgres-chamado-service:
    build:
      context: chamado-service
      dockerfile: Dockerfile-postgresql
    restart: always
    volumes:
      - postgresql-chamado-service-volume:/var/lib/postgresql/data
    networks:
      - postgresql-chamado-service-network

  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin123"
    ports:
      - "16543:80"
    depends_on:
      - postgres-filme-service
      - postgres-chamado-service
      - postgres-usuario-service
    volumes:
      - pgadmin-volume:/var/lib/pgadmin
    networks:
      - postgresql-filme-service-network
      - postgresql-usuario-service-network
      - postgresql-chamado-service-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-volume:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  eureka-server:
    build:
      context: eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - 8761:8761
    networks:
      - app-network

  filme-service:
    build:
      context: filme-service
      dockerfile: Dockerfile
    container_name: filme-service
    ports:
      - 8083:8083
    depends_on:
      - eureka-server
      - postgres-filme-service
    networks:
      - app-network
      - postgresql-filme-service-network

  chamado-service:
    build:
      context: chamado-service
      dockerfile: Dockerfile
    container_name: chamado-service
    ports:
      - 8084:8084
    depends_on:
      - eureka-server
      - postgres-chamado-service
    networks:
      - app-network
      - postgresql-chamado-service-network

  usuario-service:
    build:
      context: usuario-service
      dockerfile: Dockerfile
    container_name: usuario-service
    ports:
      - 8085:8085
    depends_on:
      - eureka-server
      - postgres-usuario-service
    networks:
      - app-network
      - postgresql-usuario-service-network

networks:
  postgresql-filme-service-network:
    driver: bridge
  postgresql-chamado-service-network:
    driver: bridge
  postgresql-usuario-service-network:
    driver: bridge
  broker-kafka:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  postgresql-filme-service-volume:
  postgresql-usuario-service-volume:
  postgresql-chamado-service-volume:
  pgadmin-volume:
  kafka-volume:
